// Script to set up Gmail configuration settings
// Run with: npx tsx setup-gmail-config.ts

import { db } from './server/db';
import { gmailConfigs } from './shared/schema';
import fs from 'fs';
import path from 'path';
import dotenv from 'dotenv';

// Load environment variables
dotenv.config();

async function setupGmailConfig() {
  console.log('Setting up Gmail configuration...');
  
  try {
    // Check for existing config
    const existingConfig = await db.query.gmailConfigs.findFirst();
    
    if (existingConfig) {
      console.log('Existing Gmail configuration found, updating...');
      
      // Update with default configuration
      await db.update(gmailConfigs)
        .set({
          whitelistedSenders: 'help@donot-reply.in',
          subjectPattern: 'New Order Received \\[(.*?)\\]',
          autoDeleteEmails: false,
          deleteAfterMinutes: 1440, // 24 hours
          limitEmailAge: true,
          maxEmailAgeMinutes: 14400, // 10 days
          userId: 'admin',
          updatedAt: new Date()
        });
    } else {
      console.log('Creating new Gmail configuration...');
      
      // Create default configuration
      await db.insert(gmailConfigs).values({
        whitelistedSenders: 'help@donot-reply.in',
        subjectPattern: 'New Order Received \\[(.*?)\\]',
        autoDeleteEmails: false,
        deleteAfterMinutes: 1440, // 24 hours
        limitEmailAge: true,
        maxEmailAgeMinutes: 14400, // 10 days
        userId: 'admin'
      });
    }
    
    // Update .env file to remove old target campaign ID
    const envFilePath = path.resolve(process.cwd(), '.env');
    let envContent = '';
    
    // Read existing .env file if it exists
    if (fs.existsSync(envFilePath)) {
      envContent = fs.readFileSync(envFilePath, 'utf8');
    }
    
    // Remove existing TARGET_CAMPAIGN_ID line if present
    envContent = envContent.replace(/^TARGET_CAMPAIGN_ID=.*$/m, '');
    
    // Write updated .env file
    fs.writeFileSync(envFilePath, envContent.trim() + '\n');
    
    console.log('Gmail configuration set up successfully!');
    console.log('Environment variables updated.');
    
  } catch (error) {
    console.error('Error setting up Gmail configuration:', error);
    process.exit(1);
  }
  
  process.exit(0);
}

setupGmailConfig();